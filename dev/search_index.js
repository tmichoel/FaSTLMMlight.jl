var documenterSearchIndex = {"docs":
[{"location":"FaST-LMM-fullrank/","page":"FaST-LMM full rank","title":"FaST-LMM full rank","text":"CurrentModule = FaSTLMMlight","category":"page"},{"location":"FaST-LMM-fullrank/#FaST-LMM-full-rank","page":"FaST-LMM full rank","title":"FaST-LMM full rank","text":"","category":"section"},{"location":"FaST-LMM-fullrank/","page":"FaST-LMM full rank","title":"FaST-LMM full rank","text":"fastlmm_fullrank\ndelta_mle_fullrank\nminus_log_like_fullrank\nsigma2_mle_fullrank\nbeta_mle_fullrank_lazy\ncreate_covariate_matrix\nproject_orth_covar\nsoftplus","category":"page"},{"location":"FaST-LMM-fullrank/#FaSTLMMlight.fastlmm_fullrank","page":"FaST-LMM full rank","title":"FaSTLMMlight.fastlmm_fullrank","text":"fastlmm_fullrank(y,K; covariates = [], mean = true)\n\nFor a linear mixed model / Gaussian process,\n\ny sim Nbigl(Xbeta sigma^2(K + delta I) bigr)\n\nwhere y is the response vector, X is a matrix of covariates,  and K is  a full-rank kernel matrix, compute the restricted maximum-likelihood estimates (REMLs) of the variance parameter sigma^2 and the variance ratio delta using FaST-LMM with a full-rank kernel matrix. Compared to the original FaST-LMM algorithm, we first project out the (optional) covariates, incl. an (optional) constant off-set (mean=true), from the response vector and the kernel matrix. This avoids all matrix computations in the variance parameter estimation. Estimates for the fixed effects beta are not computed.\n\n\n\n\n\n","category":"function"},{"location":"FaST-LMM-fullrank/#FaSTLMMlight.delta_mle_fullrank","page":"FaST-LMM full rank","title":"FaSTLMMlight.delta_mle_fullrank","text":"delta_mle_fullrank(λ, yr)\n\nCompute the MLE of the variance ratio δ given the eigenvalues of the kernel matrix and the rotated response vector by solving the non-convex optimization problem formulated in the FaST-LMM paper.\n\n\n\n\n\n","category":"function"},{"location":"FaST-LMM-fullrank/#FaSTLMMlight.minus_log_like_fullrank","page":"FaST-LMM full rank","title":"FaSTLMMlight.minus_log_like_fullrank","text":"minus_log_like_fullrank(δ, λ, yr)\n\nCompute the minus log-likelihood of the model, scaled by the number of samples and without constant factors, given the variance ratio δ, the eigenvalues of the kernel matrix, the rotated response vector and (optionally) the rotated covariates.\n\n\n\n\n\n","category":"function"},{"location":"FaST-LMM-fullrank/#FaSTLMMlight.sigma2_mle_fullrank","page":"FaST-LMM full rank","title":"FaSTLMMlight.sigma2_mle_fullrank","text":"sigma2_mle_fullrank(δ, λ, yr)\n\nCompute the MLE of the variance parameter given the variance ratio δ, the eigenvalues of the kernel matrix, and the rotated response vector.\n\n\n\n\n\n","category":"function"},{"location":"FaST-LMM-fullrank/#FaSTLMMlight.beta_mle_fullrank_lazy","page":"FaST-LMM full rank","title":"FaSTLMMlight.beta_mle_fullrank_lazy","text":"beta_mle_fullrank_lazy(y, K, X, σ², δ)\n\nLazy implementation of the MLE of the fixed effects weights given the response vector y, the kernel matrix K, the covariates X, the variance parameter σ² and the variance ratio δ. This function does not use spectral factorization, and should only be applied once, using the MLEs of the variance parameters.\n\n\n\n\n\n","category":"function"},{"location":"FaST-LMM-fullrank/#FaSTLMMlight.create_covariate_matrix","page":"FaST-LMM full rank","title":"FaSTLMMlight.create_covariate_matrix","text":"create_covariate_matrix(X; mean = true, n = 1)\n\nCreate the covariate matrix from the provided covariates with an intercept column if mean=true.\n\n\n\n\n\n","category":"function"},{"location":"FaST-LMM-fullrank/#FaSTLMMlight.project_orth_covar","page":"FaST-LMM full rank","title":"FaSTLMMlight.project_orth_covar","text":"project_orth_covar(y, K, X)\n\nProject out the covariates from the response vector and the kernel matrix.\n\n\n\n\n\n","category":"function"},{"location":"FaST-LMM-fullrank/#FaSTLMMlight.softplus","page":"FaST-LMM full rank","title":"FaSTLMMlight.softplus","text":"softplus(x)\n\nCompute the softplus function, i.e. log(1 + exp(x)), element-wise.\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"CurrentModule = FaSTLMMlight","category":"page"},{"location":"listfunctions/#List-of-package-functions","page":"List of functions","title":"List of package functions","text":"","category":"section"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"CurrentModule = FaSTLMMlight","category":"page"},{"location":"#FaST-LMM-light-Documentation","page":"Introduction","title":"FaST-LMM light Documentation","text":"","category":"section"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"We consider the setup of [Lippert et al.][1], where:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"yinmathbbR^n is a phenotype vector with values for n individuals,\nXinmathbbR^ntimes d is a matrix with data of d covariates (fixed effects) in the same n individuals,\nKinmathbbR^ntimes n is a positive semi-definite sample similarity matrix, scaled such that mathrmtr(K)=n,\nbetainmathbbR^d is the (unknown) vector of fixed effect weights,\nsigma^2 is the (unknown) variance explained by K,\nsigma_e^2 is the (unknown) residual error variance,","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"[1]: https://europepmc.org/article/med/21892150","category":"page"},{"location":"#Table-of-contents","page":"Introduction","title":"Table of contents","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"}]
}
